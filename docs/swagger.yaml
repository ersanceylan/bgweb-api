basePath: /api/v1
definitions:
  api.Board:
    properties:
      o:
        $ref: '#/definitions/api.CheckerLayout'
      x:
        $ref: '#/definitions/api.CheckerLayout'
    type: object
  api.CheckerLayout:
    properties:
      "1":
        type: integer
      "2":
        type: integer
      "3":
        type: integer
      "4":
        type: integer
      "5":
        type: integer
      "6":
        example: 5
        type: integer
      "7":
        type: integer
      "8":
        example: 3
        type: integer
      "9":
        type: integer
      "10":
        type: integer
      "11":
        type: integer
      "12":
        type: integer
      "13":
        example: 5
        type: integer
      "14":
        type: integer
      "15":
        type: integer
      "16":
        type: integer
      "17":
        type: integer
      "18":
        type: integer
      "19":
        type: integer
      "20":
        type: integer
      "21":
        type: integer
      "22":
        type: integer
      "23":
        type: integer
      "24":
        example: 2
        type: integer
      bar:
        type: integer
    type: object
  api.CheckerPlay:
    properties:
      from:
        enum:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - bar
        type: string
      to:
        enum:
        - "1"
        - "2"
        - "3"
        - "4"
        - "5"
        - "6"
        - "7"
        - "8"
        - "9"
        - "10"
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "20"
        - "21"
        - "22"
        - "23"
        - "24"
        - "off"
        type: string
    type: object
  api.EvalInfo:
    properties:
      cubeful:
        type: boolean
      plies:
        type: integer
    type: object
  api.Evaluation:
    properties:
      diff:
        type: number
      eq:
        type: number
      info:
        $ref: '#/definitions/api.EvalInfo'
      probability:
        $ref: '#/definitions/api.Probablity'
    type: object
  api.Move:
    properties:
      evaluation:
        $ref: '#/definitions/api.Evaluation'
      play:
        items:
          $ref: '#/definitions/api.CheckerPlay'
        type: array
    type: object
  api.MoveArgs:
    properties:
      board:
        $ref: '#/definitions/api.Board'
      cubeful:
        type: boolean
      dice:
        example:
        - 3
        - 1
        items:
          type: integer
        type: array
      max-moves:
        default: 0
        minimum: 0
        type: integer
      player:
        default: x
        enum:
        - x
        - ' o'
        example: x
        type: string
      score-moves:
        default: true
        example: true
        type: boolean
    type: object
  api.Probablity:
    properties:
      lose:
        type: number
      loseBG:
        type: number
      loseG:
        type: number
      win:
        type: number
      winBG:
        type: number
      winG:
        type: number
    type: object
info:
  contact: {}
  description: BGWeb API
  license:
    name: MIT
    url: /license
  termsOfService: /terms
  title: BGWeb API
  version: "1.0"
paths:
  /getmoves:
    post:
      consumes:
      - application/json
      parameters:
      - description: Move arguments
        in: body
        name: args
        schema:
          $ref: '#/definitions/api.MoveArgs'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/api.Move'
            type: array
      summary: Get moves for a given board layout and dice roll
      tags:
      - GameAnalysis
schemes:
- http
- https
swagger: "2.0"
